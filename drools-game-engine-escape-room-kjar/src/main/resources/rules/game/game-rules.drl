package org.drools.game;

import org.drools.game.model.api.*;
import org.drools.game.model.impl.base.*;
import org.drools.game.escape.room.model.house.*;
import org.drools.game.escape.room.model.items.*;
import org.drools.game.core.api.*;
import org.drools.game.core.*;
import org.drools.game.rules.*;
import java.util.List;


global GameMessageService messageService;

query "getRoomByName" (String $name)
    $r: Room(name == $name)
end

query "getVisibleItems" (String $roomName)
    Light()
    $i: VisibleInDayLightItem()
    $r: Room(name == $roomName, items contains $i)
end

query "getDarkItems" (String $roomName)
    not(Light())
    $i: ShineInTheDarkItem()
    $r: Room(name == $roomName, items contains $i)
end

query "getDoors" (String $roomName)
    $d: Door( )
    $r: Room( name == $roomName, doors contains $d )
end

// all containers that are not a room
query "getAllContainers" 
    $ic: ItemContainer() 
    not(Room (this == $ic))
end

query "WhereAmI"
    $p: Player()
    $r: Room( peopleInTheRoom contains $p.getName() )
end

rule "There is a house in the world"
    when
        $h: House()
    then
        insert( messageService.newGameMessage(  "There is a house(" + $h.getName() + ") in the world"  ) );
end

rule "There is a room in the house"
    when
        $r: Room( )
        $h: House( rooms contains $r )
        
    then
        insert(  messageService.newGameMessage(  "There is a room(" + $r.getName() + ") in the house" ) );
end

rule "The player is in a room inside the house, wake up!"
    when
        $p: Player( )
        $r: Room( name != "Outside", peopleInTheRoom contains $p.getName() )
        $h: House( rooms contains $r )
    then
        insert(  messageService.newGameMessage( $p.getName(), "Wake up! You are trapped in " + $r.getName() + "! You need to escape!" ) );
end


rule "There is a new item in the player's inventory"
    when
        $p: Player()
        $i: Item() from $p.getInventory().getItems()
    then
        insert(  messageService.newGameMessage( $p.getName(), "There is a new item in our inventory!" + $i ) );
end


rule "Light in the room when there is lightbulb and switch on"
    when
        $p: Player()
        $lb: LightBulb(connected == true, broken == false)
        $ls: LightSwitch(on == true)
        $r:  Room(items contains $lb, items contains $ls, peopleInTheRoom contains $p.getName())
        
    then
        insertLogical( new Light() );
        insert(  messageService.newGameMessage( $p.getName(),  "There is light in the room!" ) );
end


rule "If we have a key for a (locked and closed) door in our room then open the door"
    when
        $p: Player( )
        $d: Door( $doorName: name, open == false, locked == true ) 
        $r: Room( peopleInTheRoom contains $p.getName(), doors contains $d, peopleInTheRoom contains $p.getName() )
        Key( name == $doorName ) from $p.getInventory().getItems()
    then
        modify( $d ){
            setLocked( false ),
            setOpen( true )
        };
        insert(  messageService.newGameMessage( $p.getName(),  "Door '" + $doorName + "' Unlocked and Opened!" ) );
end

rule "Items can be picked when you see them (lights off -> shine in the dark)"
    when
        not(Light())
        $p: Pickable()
        $s: ShineInTheDarkItem( this == $p)
    then
        insertLogical( new PickableItem( $p ) );
end

rule "Items can be picked when you see them (lights on -> day light)"
    when
        Light()
        $p: Pickable()
        $v: VisibleInDayLightItem( this == $p)
    then
        insertLogical(new PickableItem($p));
end


rule "When we open a container we can pick the items inside"
    when
        $ic: ItemContainer( open == true )
        not (Room( this == $ic ) ) 
        $p: Pickable() from $ic.getItems()
    then
        insertLogical( new PickableItem( $p ) );
end

rule "Out Goal is to go outside"
    when
        $p: Player()
        $o: Outside( peopleInTheRoom contains $p.getName())
    then
        insert(  messageService.newGameMessage( $p.getName(), "Congrats! You manage to escape the Room!" ) );
end